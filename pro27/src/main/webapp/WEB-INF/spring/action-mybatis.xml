<?xml version="1.0" encoding="UTF-8"?>
<beans
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
 xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">

<!-- データベース設定情報を/WEB-INF/config/jdbc.propertiesファイルから読む。 -->	
	<bean id="propertyPlaceholderConfigurer"
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
	<value>/WEB-INF/config/jdbc/jdbc.properties</value>
	</property>
	</bean>

<!-- MyBatisのPooledDataSourceクラスを使ってdataSource　beanを生成 -->
 	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 	 	SqlSessionFactoryBeanクラスを利用して、dataSourceの名前にdataSource　beanを設定（Inject）-->
		<property name="dataSource" ref="dataSource" />
		<!-- 		configLocationの中にmodelConfig.xmlを設定 -->
		<property name="configLocation"
			value="classpath:mybatis/model/modelConfig.xml" />
		<!-- 		mapperLocationsのなかにmybatis/mappersパッケージの全てのxmlファイルを読み、設定。-->
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />
	</bean>

<!-- SqlSessionTemplateクラスを利用して、sqlSession beanを生成 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

<!-- sqlSession 빈을 memberDAO 빈 속성에 주입, 애너테이션으로 쓸 필요가 없어져 주석처리-->
	<!-- <bean id="memberDAO"
		class="com.spring.member.dao.MemberDAOImpl">
		<property name="sqlSession" ref="sqlSession"></property>
	</bean> -->

</beans>